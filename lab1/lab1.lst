     1                                     section .data; сегмент инициализированных переменных
     2                                  ; vall db 255
     3                                  ; chart dw 256
     4                                  ; lue3 dw -128
     5                                  ; v5 db 10h
     6                                  ;    db 100101b
     7                                  ; beta db 23, 23h, 0ch
     8                                  ; sdk db "Hello", 10
     9                                  ; min dw -32767
    10                                  ; ar dd 12345678h
    11                                  ; valar times 5 db 8
    12                                  
    13                                  ; val1 dw -25
    14                                  ; val2 dd -35
    15                                  ; name db "Тимофей Timofey"
    16                                  
    17                                  ; shest1 dw 2500h
    18                                  ; shest2 dw 0025h
    19                                  
    20                                  ; des1 dw 37
    21                                  ; des2 dw 9472
    22                                  
    23                                  ; dv1 dw 00100101b
    24                                  ; dv2 dw 0010010100000000b
    25 00000000 F8FF                    val1 dw -8
    26                                  
    27 00000002 FFFF                    F1 dw 65535
    28 00000004 FFFF0000                F2 dd 65535
    29                                  
    30 00000008 E2FF                    A DW -30
    31 0000000A 1500                    B DW 21
    32 0000000C 507265737320456E74-     ExitMsg db "Press Enter to Exit",10 ; выводимое сообщение9
    32 00000015 657220746F20457869-
    32 0000001E 740A               
    33                                  lenExit equ $-ExitMsg; сегмент неинициализированных переменных
    34                                  
    35                                     section .bss
    36                                  ; alu resw 10
    37                                  ; f1 resb 5
    38 00000000 ????????                X resd 1
    39 00000004 <res Ah>                InBuf resb 10 ; буфер для вводимой строки
    40                                  lenIn equ $-InBuf
    41                                  
    42                                     section .text ; сегмент кода
    43                                     global _start
    44                                  _start:
    45 00000000 668B0425[00000000]         mov AX, [val1]
    46 00000008 66830425[02000000]-        add word[F1],1
    46 00000010 01                 
    47 00000011 830425[04000000]01         add dword[F2],1
    48 00000019 8B0425[08000000]           mov EAX,[A] ; загрузить число A в регистр EAX
    49 00000020 83C005                     add EAX,5
    50 00000023 2B0425[0A000000]           sub EAX,[B] ; вычесть число B, результат в EAX
    51 0000002A 890425[00000000]           mov [X],EAX ; сохранить результат в памяти
    52                                     ; write
    53 00000031 B801000000                 mov rax, 1; системная функция 1 (write)
    54 00000036 BF01000000                 mov rdi, 1; дескриптор файла stdout=1
    55 0000003B 48BE-                      mov rsi, ExitMsg ; адрес выводимой строки
    55 0000003D [0C00000000000000] 
    56 00000045 BA14000000                 mov rdx, lenExit ; длина строки
    57 0000004A 0F05                       syscall; вызов системной функции
    58                                     ; read
    59 0000004C B800000000                 mov rax, 0; системная функция 0 (read)
    60 00000051 BF00000000                 mov rdi, 0; дескриптор файла stdin=0
    61 00000056 48BE-                      mov rsi, InBuf; адрес вводимой строки
    61 00000058 [0400000000000000] 
    62 00000060 BA0A000000                 mov rdx, lenIn; длина строки
    63 00000065 0F05                       syscall; вызов системной функции
    64                                     ; exit
    65 00000067 B83C000000                 mov rax, 60; системная функция 60 (exit)
    66 0000006C 4831FF                     xor rdi, rdi; return code 0
    67 0000006F 0F05                       syscall; вызов системной функции
