     1                                  section .data
     2 00000000 000000000000000000-     matrix db 5*7 dup(0)  ; объявляем матрицу 5*7
     2 00000009 000000000000000000-
     2 00000012 000000000000000000-
     2 0000001B 0000000000000000   
     3                                  
     4                                  section .text
     5                                  global _start
     6                                  
     7                                  _start:
     8                                      ; ввод матрицы
     9 00000000 B905000000                  mov rcx, 5         ; количество строк матрицы
    10 00000005 48BE-                       mov rsi, matrix    ; адрес начала матрицы
    10 00000007 [0000000000000000] 
    11                                  
    12                                  input_loop:
    13 0000000F 51                          push rcx           ; сохраняем счетчик цикла на стеке
    14 00000010 B907000000                  mov rcx, 7         ; количество элементов в строке
    15 00000015 4889F7                      mov rdi, rsi       ; сохраняем адрес текущей строки
    16                                  
    17                                  element_loop:
    18                                      ; ввод элемента матрицы
    19 00000018 B800000000                  mov rax, 0         ; номер системного вызова для чтения с клавиатуры
    20 0000001D BB00000000                  mov rbx, 0         ; дескриптор файла для стандартного ввода (клавиатура)
    21 00000022 4889F9                      mov rcx, rdi       ; передаем адрес текущего элемента матрицы в качестве аргумента
    22 00000025 BA01000000                  mov rdx, 1         ; количество байт для чтения (мы считываем один байт за раз)
    23 0000002A 0F05                        syscall           ; вызов системного вызова
    24                                  
    25                                      ; сохраняем считанное значение в памяти
    26 0000002C 2C30                        sub al, '0'        ; преобразуем символ-цифру в числовое значение
    27 0000002E 678807                      mov [edi], al      ; сохраняем значение в текущем элементе
    28                                  
    29 00000031 FFC7                        inc edi            ; увеличиваем указатель на следующий элемент в строке
    30 00000033 E2E3                        loop element_loop  ; повторяем для остальных элементов в строке
    31                                  
    32 00000035 59                          pop rcx            ; восстанавливаем счетчик цикла из стека
    33 00000036 83C607                      add esi, 7         ; увеличиваем указатель на начало следующей строки
    34 00000039 E2D4                        loop input_loop    ; повторяем для остальных строк
    35                                  
    36                                      ; здесь можно продолжить выполнение программы
