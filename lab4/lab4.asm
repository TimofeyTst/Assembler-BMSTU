section .data
matrix db 5*7 dup(0)  ; объявляем матрицу 5*7

section .text
global _start

_start:
    ; ввод матрицы
    mov rcx, 5         ; количество строк матрицы
    mov rsi, matrix    ; адрес начала матрицы

input_loop:
    push rcx           ; сохраняем счетчик цикла на стеке
    mov rcx, 7         ; количество элементов в строке
    mov rdi, rsi       ; сохраняем адрес текущей строки

element_loop:
    ; ввод элемента матрицы
    mov rax, 0         ; номер системного вызова для чтения с клавиатуры
    mov rbx, 0         ; дескриптор файла для стандартного ввода (клавиатура)
    mov rcx, rdi       ; передаем адрес текущего элемента матрицы в качестве аргумента
    mov rdx, 1         ; количество байт для чтения (мы считываем один байт за раз)
    syscall           ; вызов системного вызова

    ; сохраняем считанное значение в памяти
    sub al, '0'        ; преобразуем символ-цифру в числовое значение
    mov [edi], al      ; сохраняем значение в текущем элементе

    inc edi            ; увеличиваем указатель на следующий элемент в строке
    loop element_loop  ; повторяем для остальных элементов в строке

    pop rcx            ; восстанавливаем счетчик цикла из стека
    add esi, 7         ; увеличиваем указатель на начало следующей строки
    loop input_loop    ; повторяем для остальных строк

    ; здесь можно продолжить выполнение программы
